{"version":3,"sources":["components/main-nav/MainNav.js","components/menu-nav/food-data.js","components/menu-nav/MenuNav.js","pages/MenuPage.jsx","pages/AboutPage.jsx","pages/StoresPage.jsx","components/form-input/FormInput.jsx","components/custom-button/CustomButton.jsx","components/signin/SignIn.jsx","pages/AccountPage.jsx","App.js","serviceWorker.js","index.js"],"names":["MainNav","props","pathname","this","className","to","React","Component","FOOD_DATA","title","routeName","items","name","href","MenuNav","state","foods","hashtag","length","filteredFood","filter","food","map","item","idx","MenuPage","console","log","location","hash","AboutPage","StoresPage","FormInput","handleChange","label","otherProps","onChange","value","toUpperCase","CustomButton","children","SignIn","handleSubmit","event","preventDefault","setState","email","password","target","onSubmit","type","required","AccountPage","App","exact","path","component","StorePage","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ccbe68f5.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './main-nav.css';\r\n\r\nclass MainNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render () {\r\n    const { pathname } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <header className=\"main-nav\">\r\n          <div className=\"main-nav__left\">\r\n            <div className=\"logo\">\r\n              Pizza<span className=\"logo__highlight\"> Hub</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"main-nav__middle\">\r\n            <nav className=\"main-navbar\">\r\n              {/* <a href=\"#MENU\" className=\"main-navbar__item main-navbar__item--active\">MENU</a>\r\n              <a href=\"#ABOUT_US\" className=\"main-navbar__item\">ABOUT US</a>\r\n              <a href=\"#STORES\" className=\"main-navbar__item\">STORES</a> */}\r\n              <Link to='/' className={`main-navbar__item ${pathname === '/' ? \"main-navbar__item--active\" : null}`}\r\n              >MENU</Link>\r\n              <Link to='/about' className={`main-navbar__item ${pathname === '/about' ? \"main-navbar__item--active\" : null}`}\r\n              >ABOUT US</Link>\r\n              <Link to='/stores' className={`main-navbar__item ${pathname === '/stores' ? \"main-navbar__item--active\" : null}`}\r\n              >STORES</Link>\r\n            </nav>\r\n          </div>\r\n          <div className=\"main-nav__right\">\r\n            <div className=\"login\">\r\n              <Link to='/account' ><i className=\"fa fa-user-circle\"></i> My Account</Link>\r\n\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainNav;","const FOOD_DATA = [\r\n  {\r\n    title: 'PIZZAS',\r\n    routeName: '#PIZZAS',\r\n    items: [\r\n      {\r\n        name: 'NEW PRODUCTS',\r\n        href: \"#NEW_PRODUCTS\"\r\n      },\r\n      {\r\n        name: 'PREMIUM PIZZAS',\r\n        href: '#PREMIUM_PIZZAS',\r\n      },\r\n      {\r\n        name: 'TRADITIONAL PIZZAS',\r\n        href: '#TRADITIONAL_PIZZAS',\r\n      },\r\n      {\r\n        name: 'DIY PIZZAS',\r\n        href: '#DIY_PIZZAS',\r\n      },\r\n\r\n    ]\r\n  },\r\n  {\r\n    title: 'DESSERTS',\r\n    routeName: '#DESSERTS',\r\n    items: [\r\n      {\r\n        name: 'D1',\r\n        href: '#D1',\r\n      },\r\n      {\r\n        name: 'D2',\r\n        href: '#D2',\r\n      },\r\n      {\r\n        name: 'D3',\r\n        href: '#D3',\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\nexport default FOOD_DATA;","import React, { Fragment } from 'react';\r\nimport './menu-nav.scss';\r\nimport FOOD_DATA from './food-data';\r\n\r\nclass MenuNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      foods: FOOD_DATA\r\n    }\r\n  }\r\n\r\n  render () {\r\n    let { hashtag } = this.props;\r\n    if (hashtag.length === 0) {\r\n      hashtag = '#PIZZAS';\r\n    }\r\n    // filter food type according to hashtag to determine whether or not showing the sub-menu\r\n    let filteredFood = this.state.foods.filter((food) => (food.routeName === hashtag));\r\n\r\n    return (\r\n      <Fragment>\r\n        <header className=\"menu-nav\">\r\n          <nav className=\"menu-navbar\">\r\n            <a href=\"#PIZZAS\" className={`menu-navbar__item ${hashtag === '#PIZZAS' ? \"menu-navbar__item--active\" : null}`}\r\n            >PIZZAS</a>\r\n            <a href=\"#DRINKS\" className={`menu-navbar__item ${hashtag === '#DRINKS' ? \"menu-navbar__item--active\" : null}`}\r\n            >DRINKS</a>\r\n            <a href=\"#DESSERTS\" className={`menu-navbar__item ${hashtag === '#DESSERTS' ? \"menu-navbar__item--active\" : null}`}\r\n            >DESSERTS</a>\r\n          </nav>\r\n          {filteredFood.length === 0 ? null : // if filteredFood has no items, return null\r\n            <nav className=\"menu-sub-navbar\">\r\n              {filteredFood[0].items.map((item, idx) => (\r\n                // iterate over the items in the filteredFood\r\n                (<a href={item.href} className=\"menu-sub-navbar__item\">{item.name}</a>)\r\n              ))}\r\n            </nav>}\r\n        </header>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuNav;","import React from 'react';\r\nimport MainNav from '../components/main-nav/MainNav';\r\nimport MenuNav from '../components/menu-nav/MenuNav';\r\n\r\nconst MenuPage = (props) => {\r\n  console.log(props);\r\n  const pathname = props.location.pathname;\r\n  const hashtag = props.location.hash;\r\n  return (\r\n    <div>\r\n      <MainNav pathname={pathname} />\r\n      <MenuNav hashtag={hashtag} />\r\n      <h1>Menu PAGE</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuPage;\r\n","import React from 'react';\r\nimport MainNav from '../components/main-nav/MainNav';\r\n\r\nconst AboutPage = (props) => {\r\n  // console.log(props.location.pathname);\r\n  const pathname = props.location.pathname;\r\n  return (\r\n    <div>\r\n      <MainNav pathname={pathname} />\r\n      <h1>About US PAGE</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport MainNav from '../components/main-nav/MainNav';\r\n\r\nconst StoresPage = (props) => {\r\n  const pathname = props.location.pathname;\r\n  return (\r\n    <div>\r\n      <MainNav pathname={pathname} />\r\n      <h1>Stores PAGE</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoresPage;\r\n","import React from 'react';\r\nimport './form-input.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form__input\"\r\n        onChange={handleChange}\r\n        {...otherProps} />\r\n      {/* review carefully here */}\r\n      {label ? (\r\n        <label\r\n          className={`${\r\n            otherProps.value.length ? 'shrink' : ''\r\n            } form__input-label`}\r\n        >\r\n          {label.toUpperCase()}\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormInput;","import React from 'react';\r\nimport './custom-button.scss';\r\n\r\nconst CustomButton = ({ children, ...otherProps }) => (\r\n  <button className=\"custom-button\" {...otherProps}>\r\n    {/* `children` stands for all contents within the CustomButton tag */}\r\n    {children}\r\n  </button>\r\n)\r\n\r\nexport default CustomButton;","import React from 'react';\r\nimport FormInput from '../form-input/FormInput';\r\nimport CustomButton from '../custom-button/CustomButton';\r\nimport './signin.scss';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      email: '',\r\n      password: '',\r\n    })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      // automatically match email and password value\r\n      // due to the name attribute\r\n      [name]: value,\r\n    })\r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"sign-in\">\r\n        <h2>I already have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            handleChange={this.handleChange}\r\n            value={this.state.email}\r\n            label='email'\r\n            required\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            handleChange={this.handleChange}\r\n            value={this.state.password}\r\n            label='password'\r\n            required\r\n          />\r\n          <CustomButton type='submit'>SIGN IN</CustomButton>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport MainNav from '../components/main-nav/MainNav';\r\nimport SignIn from '../components/signin/SignIn';\r\n\r\nconst AccountPage = (props) => {\r\n  // console.log(props.location.pathname);\r\n  const pathname = props.location.pathname;\r\n  return (\r\n    <div>\r\n      <MainNav pathname={pathname} />\r\n      <h1>ACCOUNT PAGE</h1>\r\n      <SignIn />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountPage;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport MenuPage from './pages/MenuPage';\nimport AboutPage from './pages/AboutPage';\nimport StorePage from './pages/StoresPage';\nimport AccountPage from './pages/AccountPage';\n\nfunction App () {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          {/* Switch: Once find a matched path, will stop finding and only render the matched page. \n        It ensures that only one pages is rendered.*/}\n          <Route exact={true} path='/' component={MenuPage} />\n          {/* exact: match path exactly */}\n          <Route exact={true} path='/about' component={AboutPage} />\n          <Route exact={true} path='/stores' component={StorePage} />\n          <Route exact={true} path='/account' component={AccountPage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}